{"version":3,"sources":["index.ts"],"names":["WebRTCModule","NativeModules","Error","Platform","OS","Logger","enable","registerGlobals","global","navigator","mediaDevices","getUserMedia","bind","getDisplayMedia","enumerateDevices","RTCIceCandidate","RTCPeerConnection","RTCRtpReceiver","RTCRtpSender","RTCSessionDescription","MediaStream","MediaStreamTrack","MediaStreamTrackEvent","RTCRtpTransceiver","RTCErrorEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAxBA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,0BAAzB;;AAEA,IAAID,YAAY,KAAK,IAArB,EAA2B;AACvB,QAAM,IAAIE,KAAJ,CAAW,oCAAmCC,sBAASC,EAAT,KAAgB,KAAhB,GAChD,0EADgD,GAEhD,sEACH,EAHK,CAAN;AAIH;;AAmBDC,gBAAOC,MAAP,CAAc,GAAd,E,CACA;AAEA;;;AACA;;AAqBA,SAASC,eAAT,GAAiC;AAC7B;AACA,MAAI,OAAOC,MAAM,CAACC,SAAd,KAA4B,QAAhC,EAA0C;AACtC,UAAM,IAAIP,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,MAAI,CAACM,MAAM,CAACC,SAAP,CAAiBC,YAAtB,EAAoC;AAChCF,IAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,GAAgC,EAAhC;AACH;;AAEDF,EAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,CAA8BC,YAA9B,GAA6CD,sBAAaC,YAAb,CAA0BC,IAA1B,CAA+BF,qBAA/B,CAA7C;AACAF,EAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,CAA8BG,eAA9B,GAAgDH,sBAAaG,eAAb,CAA6BD,IAA7B,CAAkCF,qBAAlC,CAAhD;AACAF,EAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,CAA8BI,gBAA9B,GAAiDJ,sBAAaI,gBAAb,CAA8BF,IAA9B,CAAmCF,qBAAnC,CAAjD;AAEAF,EAAAA,MAAM,CAACO,eAAP,GAAyBA,wBAAzB;AACAP,EAAAA,MAAM,CAACQ,iBAAP,GAA2BA,0BAA3B;AACAR,EAAAA,MAAM,CAACS,cAAP,GAAwBA,uBAAxB;AACAT,EAAAA,MAAM,CAACU,YAAP,GAAsBD,uBAAtB;AACAT,EAAAA,MAAM,CAACW,qBAAP,GAA+BA,8BAA/B;AACAX,EAAAA,MAAM,CAACY,WAAP,GAAqBA,oBAArB;AACAZ,EAAAA,MAAM,CAACa,gBAAP,GAA0BA,yBAA1B;AACAb,EAAAA,MAAM,CAACc,qBAAP,GAA+BA,8BAA/B;AACAd,EAAAA,MAAM,CAACe,iBAAP,GAA2BA,0BAA3B;AACAf,EAAAA,MAAM,CAACS,cAAP,GAAwBA,uBAAxB;AACAT,EAAAA,MAAM,CAACU,YAAP,GAAsBA,qBAAtB;AACAV,EAAAA,MAAM,CAACgB,aAAP,GAAuBA,sBAAvB;AACH","sourcesContent":["import { NativeModules, Platform } from 'react-native';\nconst { WebRTCModule } = NativeModules;\n\nif (WebRTCModule === null) {\n    throw new Error(`WebRTC native module not found.\\n${Platform.OS === 'ios' ?\n        'Try executing the \"pod install\" command inside your projects ios folder.' :\n        'Try executing the \"npm install\" command inside your projects folder.'\n    }`);\n}\n\nimport { setupNativeEvents } from './EventEmitter';\nimport Logger from './Logger';\nimport mediaDevices from './MediaDevices';\nimport MediaStream from './MediaStream';\nimport MediaStreamTrack from './MediaStreamTrack';\nimport MediaStreamTrackEvent from './MediaStreamTrackEvent';\nimport permissions from './Permissions';\nimport RTCErrorEvent from './RTCErrorEvent';\nimport RTCIceCandidate from './RTCIceCandidate';\nimport RTCPeerConnection from './RTCPeerConnection';\nimport RTCRtpReceiver from './RTCRtpReceiver';\nimport RTCRtpSender from './RTCRtpSender';\nimport RTCRtpTransceiver from './RTCRtpTransceiver';\nimport RTCSessionDescription from './RTCSessionDescription';\nimport RTCView from './RTCView';\nimport ScreenCapturePickerView from './ScreenCapturePickerView';\n\nLogger.enable('*');\n// Logger.enable(`*,-${Logger.ROOT_PREFIX}:*:DEBUG`);\n\n// Add listeners for the native events early, since they are added asynchronously.\nsetupNativeEvents();\n\nexport {\n    RTCIceCandidate,\n    RTCPeerConnection,\n    RTCSessionDescription,\n    RTCView,\n    ScreenCapturePickerView,\n    RTCRtpTransceiver,\n    RTCRtpReceiver,\n    RTCRtpSender,\n    RTCErrorEvent,\n    MediaStream,\n    MediaStreamTrack,\n    mediaDevices,\n    permissions,\n    registerGlobals\n};\n\ndeclare const global: any;\n\nfunction registerGlobals(): void {\n    // Should not happen. React Native has a global navigator object.\n    if (typeof global.navigator !== 'object') {\n        throw new Error('navigator is not an object');\n    }\n\n    if (!global.navigator.mediaDevices) {\n        global.navigator.mediaDevices = {};\n    }\n\n    global.navigator.mediaDevices.getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    global.navigator.mediaDevices.getDisplayMedia = mediaDevices.getDisplayMedia.bind(mediaDevices);\n    global.navigator.mediaDevices.enumerateDevices = mediaDevices.enumerateDevices.bind(mediaDevices);\n\n    global.RTCIceCandidate = RTCIceCandidate;\n    global.RTCPeerConnection = RTCPeerConnection;\n    global.RTCRtpReceiver = RTCRtpReceiver;\n    global.RTCRtpSender = RTCRtpReceiver;\n    global.RTCSessionDescription = RTCSessionDescription;\n    global.MediaStream = MediaStream;\n    global.MediaStreamTrack = MediaStreamTrack;\n    global.MediaStreamTrackEvent = MediaStreamTrackEvent;\n    global.RTCRtpTransceiver = RTCRtpTransceiver;\n    global.RTCRtpReceiver = RTCRtpReceiver;\n    global.RTCRtpSender = RTCRtpSender;\n    global.RTCErrorEvent = RTCErrorEvent;\n}\n"]}