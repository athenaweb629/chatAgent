{"version":3,"sources":["RTCRtpSendParameters.ts"],"names":["DegradationPreference","fromNative","nativeFormat","stringFormat","toLowerCase","replace","toNative","format","toUpperCase","RTCRtpSendParameters","RTCRtpParameters","constructor","init","transactionId","encodings","degradationPreference","enc","push","RTCRtpEncodingParameters","toJSON","obj","map","e"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAQA;AACA;AACA;AACA;AACA,MAAMA,qBAAN,CAA4B;AACP,SAAVC,UAAU,CAACC,YAAD,EAAkD;AAC/D,UAAMC,YAAY,GAAGD,YAAY,CAACE,WAAb,GAA2BC,OAA3B,CAAmC,GAAnC,EAAwC,GAAxC,CAArB;AAEA,WAAOF,YAAP;AACH;;AAEc,SAARG,QAAQ,CAACC,MAAD,EAA4C;AACvD,WAAOA,MAAM,CAACC,WAAP,GAAqBH,OAArB,CAA6B,GAA7B,EAAkC,GAAlC,CAAP;AACH;;AATuB;;AAkBb,MAAMI,oBAAN,SAAmCC,yBAAnC,CAAoD;AAK/DC,EAAAA,WAAW,CAACC,IAAD,EAAiC;AACxC,UAAMA,IAAN;;AADwC;;AAAA;;AAAA;;AAGxC,SAAKC,aAAL,GAAqBD,IAAI,CAACC,aAA1B;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,qBAAL,GAA6BH,IAAI,CAACG,qBAAL,GACzBf,qBAAqB,CAACC,UAAtB,CAAiCW,IAAI,CAACG,qBAAtC,CADyB,GACsC,IADnE;;AAGA,SAAK,MAAMC,GAAX,IAAkBJ,IAAI,CAACE,SAAvB,EAAkC;AAC9B,WAAKA,SAAL,CAAeG,IAAf,CAAoB,IAAIC,iCAAJ,CAA6BF,GAA7B,CAApB;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAA6B;AAC/B,UAAMC,GAAG,GAAG,MAAMD,MAAN,EAAZ;AAEAC,IAAAA,GAAG,CAAC,eAAD,CAAH,GAAuB,KAAKP,aAA5B;AAEAO,IAAAA,GAAG,CAAC,WAAD,CAAH,GAAmB,KAAKN,SAAL,CAAeO,GAAf,CAAmBC,CAAC,IAAIA,CAAC,CAACH,MAAF,EAAxB,CAAnB;;AAEA,QAAI,KAAKJ,qBAAL,KAA+B,IAAnC,EAAyC;AACrCK,MAAAA,GAAG,CAAC,uBAAD,CAAH,GAA+BpB,qBAAqB,CAACM,QAAtB,CAA+B,KAAKS,qBAApC,CAA/B;AACH;;AAED,WAAOK,GAAP;AACH;;AA9B8D","sourcesContent":["import RTCRtpEncodingParameters, { RTCRtpEncodingParametersInit } from './RTCRtpEncodingParameters';\nimport RTCRtpParameters, { RTCRtpParametersInit } from './RTCRtpParameters';\n\ntype DegradationPreferenceType = 'maintain-framerate'\n    | 'maintain-resolution'\n    | 'balanced'\n    | 'disabled'\n\n\n/**\n * Class to convert degradation preference format. Native has a format such as\n * MAINTAIN_FRAMERATE whereas the web APIs expect maintain-framerate\n */\nclass DegradationPreference {\n    static fromNative(nativeFormat: string): DegradationPreferenceType {\n        const stringFormat = nativeFormat.toLowerCase().replace('_', '-');\n\n        return stringFormat as DegradationPreferenceType;\n    }\n\n    static toNative(format: DegradationPreferenceType): string {\n        return format.toUpperCase().replace('-', '_');\n    }\n}\n\nexport interface RTCRtpSendParametersInit extends RTCRtpParametersInit {\n    transactionId: string;\n    encodings: RTCRtpEncodingParametersInit[];\n    degradationPreference?: string;\n}\n\nexport default class RTCRtpSendParameters extends RTCRtpParameters {\n    readonly transactionId: string;\n    readonly encodings: RTCRtpEncodingParameters[];\n    degradationPreference: DegradationPreferenceType | null;\n\n    constructor(init: RTCRtpSendParametersInit) {\n        super(init);\n\n        this.transactionId = init.transactionId;\n        this.encodings = [];\n        this.degradationPreference = init.degradationPreference ?\n            DegradationPreference.fromNative(init.degradationPreference) : null;\n\n        for (const enc of init.encodings) {\n            this.encodings.push(new RTCRtpEncodingParameters(enc));\n        }\n    }\n\n    toJSON(): RTCRtpSendParametersInit {\n        const obj = super.toJSON();\n\n        obj['transactionId'] = this.transactionId;\n\n        obj['encodings'] = this.encodings.map(e => e.toJSON());\n\n        if (this.degradationPreference !== null) {\n            obj['degradationPreference'] = DegradationPreference.toNative(this.degradationPreference);\n        }\n\n        return obj as RTCRtpSendParametersInit;\n    }\n}\n"]}