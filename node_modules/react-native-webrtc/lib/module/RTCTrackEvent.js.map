{"version":3,"sources":["RTCTrackEvent.ts"],"names":["RTCTrackEvent","constructor","type","eventInitDict","toString","streams","transceiver","receiver","track"],"mappings":";;AAMA,eAAe,MAAMA,aAAN,CAAoB;AAO/BC,EAAAA,WAAW,CAACC,IAAD,EAAeC,aAAf,EAA0F;AAAA;;AAAA,qCALnE,EAKmE;;AAAA;;AAAA;;AAAA;;AACjG,SAAKD,IAAL,GAAYA,IAAI,CAACE,QAAL,EAAZ;AACA,SAAKC,OAAL,GAAeF,aAAa,CAACE,OAA7B;AACA,SAAKC,WAAL,GAAmBH,aAAa,CAACG,WAAjC;AACA,SAAKC,QAAL,GAAgBJ,aAAa,CAACG,WAAd,CAA0BC,QAA1C;AACA,SAAKC,KAAL,GAAaL,aAAa,CAACG,WAAd,CAA0BC,QAA1B,GAAqCJ,aAAa,CAACG,WAAd,CAA0BC,QAA1B,CAAmCC,KAAxE,GAAgF,IAA7F;AACH;;AAb8B","sourcesContent":["\nimport MediaStream from './MediaStream';\nimport type MediaStreamTrack from './MediaStreamTrack';\nimport RTCRtpReceiver from './RTCRtpReceiver';\nimport RTCRtpTransceiver from './RTCRtpTransceiver';\n\nexport default class RTCTrackEvent {\n    type: string;\n    readonly streams: MediaStream[] = [];\n    readonly transceiver: RTCRtpTransceiver;\n    readonly receiver: RTCRtpReceiver | null;\n    readonly track: MediaStreamTrack | null;\n\n    constructor(type: string, eventInitDict: { streams: MediaStream[], transceiver: RTCRtpTransceiver }) {\n        this.type = type.toString();\n        this.streams = eventInitDict.streams;\n        this.transceiver = eventInitDict.transceiver;\n        this.receiver = eventInitDict.transceiver.receiver;\n        this.track = eventInitDict.transceiver.receiver ? eventInitDict.transceiver.receiver.track : null;\n    }\n}\n"]}