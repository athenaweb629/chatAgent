{"version":3,"sources":["index.ts"],"names":["NativeModules","Platform","WebRTCModule","Error","OS","setupNativeEvents","Logger","mediaDevices","MediaStream","MediaStreamTrack","MediaStreamTrackEvent","permissions","RTCErrorEvent","RTCIceCandidate","RTCPeerConnection","RTCRtpReceiver","RTCRtpSender","RTCRtpTransceiver","RTCSessionDescription","RTCView","ScreenCapturePickerView","enable","registerGlobals","global","navigator","getUserMedia","bind","getDisplayMedia","enumerateDevices"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBF,aAAzB;;AAEA,IAAIE,YAAY,KAAK,IAArB,EAA2B;AACvB,QAAM,IAAIC,KAAJ,CAAW,oCAAmCF,QAAQ,CAACG,EAAT,KAAgB,KAAhB,GAChD,0EADgD,GAEhD,sEACH,EAHK,CAAN;AAIH;;AAED,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAEAd,MAAM,CAACe,MAAP,CAAc,GAAd,E,CACA;AAEA;;AACAhB,iBAAiB;AAEjB,SACIQ,eADJ,EAEIC,iBAFJ,EAGII,qBAHJ,EAIIC,OAJJ,EAKIC,uBALJ,EAMIH,iBANJ,EAOIF,cAPJ,EAQIC,YARJ,EASIJ,aATJ,EAUIJ,WAVJ,EAWIC,gBAXJ,EAYIF,YAZJ,EAaII,WAbJ,EAcIW,eAdJ;;AAmBA,SAASA,eAAT,GAAiC;AAC7B;AACA,MAAI,OAAOC,MAAM,CAACC,SAAd,KAA4B,QAAhC,EAA0C;AACtC,UAAM,IAAIrB,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,MAAI,CAACoB,MAAM,CAACC,SAAP,CAAiBjB,YAAtB,EAAoC;AAChCgB,IAAAA,MAAM,CAACC,SAAP,CAAiBjB,YAAjB,GAAgC,EAAhC;AACH;;AAEDgB,EAAAA,MAAM,CAACC,SAAP,CAAiBjB,YAAjB,CAA8BkB,YAA9B,GAA6ClB,YAAY,CAACkB,YAAb,CAA0BC,IAA1B,CAA+BnB,YAA/B,CAA7C;AACAgB,EAAAA,MAAM,CAACC,SAAP,CAAiBjB,YAAjB,CAA8BoB,eAA9B,GAAgDpB,YAAY,CAACoB,eAAb,CAA6BD,IAA7B,CAAkCnB,YAAlC,CAAhD;AACAgB,EAAAA,MAAM,CAACC,SAAP,CAAiBjB,YAAjB,CAA8BqB,gBAA9B,GAAiDrB,YAAY,CAACqB,gBAAb,CAA8BF,IAA9B,CAAmCnB,YAAnC,CAAjD;AAEAgB,EAAAA,MAAM,CAACV,eAAP,GAAyBA,eAAzB;AACAU,EAAAA,MAAM,CAACT,iBAAP,GAA2BA,iBAA3B;AACAS,EAAAA,MAAM,CAACR,cAAP,GAAwBA,cAAxB;AACAQ,EAAAA,MAAM,CAACP,YAAP,GAAsBD,cAAtB;AACAQ,EAAAA,MAAM,CAACL,qBAAP,GAA+BA,qBAA/B;AACAK,EAAAA,MAAM,CAACf,WAAP,GAAqBA,WAArB;AACAe,EAAAA,MAAM,CAACd,gBAAP,GAA0BA,gBAA1B;AACAc,EAAAA,MAAM,CAACb,qBAAP,GAA+BA,qBAA/B;AACAa,EAAAA,MAAM,CAACN,iBAAP,GAA2BA,iBAA3B;AACAM,EAAAA,MAAM,CAACR,cAAP,GAAwBA,cAAxB;AACAQ,EAAAA,MAAM,CAACP,YAAP,GAAsBA,YAAtB;AACAO,EAAAA,MAAM,CAACX,aAAP,GAAuBA,aAAvB;AACH","sourcesContent":["import { NativeModules, Platform } from 'react-native';\nconst { WebRTCModule } = NativeModules;\n\nif (WebRTCModule === null) {\n    throw new Error(`WebRTC native module not found.\\n${Platform.OS === 'ios' ?\n        'Try executing the \"pod install\" command inside your projects ios folder.' :\n        'Try executing the \"npm install\" command inside your projects folder.'\n    }`);\n}\n\nimport { setupNativeEvents } from './EventEmitter';\nimport Logger from './Logger';\nimport mediaDevices from './MediaDevices';\nimport MediaStream from './MediaStream';\nimport MediaStreamTrack from './MediaStreamTrack';\nimport MediaStreamTrackEvent from './MediaStreamTrackEvent';\nimport permissions from './Permissions';\nimport RTCErrorEvent from './RTCErrorEvent';\nimport RTCIceCandidate from './RTCIceCandidate';\nimport RTCPeerConnection from './RTCPeerConnection';\nimport RTCRtpReceiver from './RTCRtpReceiver';\nimport RTCRtpSender from './RTCRtpSender';\nimport RTCRtpTransceiver from './RTCRtpTransceiver';\nimport RTCSessionDescription from './RTCSessionDescription';\nimport RTCView from './RTCView';\nimport ScreenCapturePickerView from './ScreenCapturePickerView';\n\nLogger.enable('*');\n// Logger.enable(`*,-${Logger.ROOT_PREFIX}:*:DEBUG`);\n\n// Add listeners for the native events early, since they are added asynchronously.\nsetupNativeEvents();\n\nexport {\n    RTCIceCandidate,\n    RTCPeerConnection,\n    RTCSessionDescription,\n    RTCView,\n    ScreenCapturePickerView,\n    RTCRtpTransceiver,\n    RTCRtpReceiver,\n    RTCRtpSender,\n    RTCErrorEvent,\n    MediaStream,\n    MediaStreamTrack,\n    mediaDevices,\n    permissions,\n    registerGlobals\n};\n\ndeclare const global: any;\n\nfunction registerGlobals(): void {\n    // Should not happen. React Native has a global navigator object.\n    if (typeof global.navigator !== 'object') {\n        throw new Error('navigator is not an object');\n    }\n\n    if (!global.navigator.mediaDevices) {\n        global.navigator.mediaDevices = {};\n    }\n\n    global.navigator.mediaDevices.getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    global.navigator.mediaDevices.getDisplayMedia = mediaDevices.getDisplayMedia.bind(mediaDevices);\n    global.navigator.mediaDevices.enumerateDevices = mediaDevices.enumerateDevices.bind(mediaDevices);\n\n    global.RTCIceCandidate = RTCIceCandidate;\n    global.RTCPeerConnection = RTCPeerConnection;\n    global.RTCRtpReceiver = RTCRtpReceiver;\n    global.RTCRtpSender = RTCRtpReceiver;\n    global.RTCSessionDescription = RTCSessionDescription;\n    global.MediaStream = MediaStream;\n    global.MediaStreamTrack = MediaStreamTrack;\n    global.MediaStreamTrackEvent = MediaStreamTrackEvent;\n    global.RTCRtpTransceiver = RTCRtpTransceiver;\n    global.RTCRtpReceiver = RTCRtpReceiver;\n    global.RTCRtpSender = RTCRtpSender;\n    global.RTCErrorEvent = RTCErrorEvent;\n}\n"]}