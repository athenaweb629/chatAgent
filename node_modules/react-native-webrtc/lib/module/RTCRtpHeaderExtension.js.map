{"version":3,"sources":["RTCRtpHeaderExtension.ts"],"names":["RTCRtpHeaderExtension","constructor","init","id","uri","encrypted","Object","freeze","toJSON"],"mappings":";;AAMA,eAAe,MAAMA,qBAAN,CAA4B;AAKvCC,EAAAA,WAAW,CAACC,IAAD,EAAkC;AAAA;;AAAA;;AAAA;;AACzC,SAAKC,EAAL,GAAUD,IAAI,CAACC,EAAf;AACA,SAAKC,GAAL,GAAWF,IAAI,CAACE,GAAhB;AACA,SAAKC,SAAL,GAAiBH,IAAI,CAACG,SAAtB;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;;AAEDC,EAAAA,MAAM,GAA8B;AAChC,WAAO;AACHL,MAAAA,EAAE,EAAE,KAAKA,EADN;AAEHC,MAAAA,GAAG,EAAE,KAAKA,GAFP;AAGHC,MAAAA,SAAS,EAAE,KAAKA;AAHb,KAAP;AAKH;;AAnBsC","sourcesContent":["export interface RTCRtpHeaderExtensionInit {\n    id: number;\n    uri: string;\n    encrypted: boolean;\n}\n\nexport default class RTCRtpHeaderExtension {\n    readonly id: number;\n    readonly uri: string;\n    readonly encrypted: boolean;\n\n    constructor(init: RTCRtpHeaderExtensionInit) {\n        this.id = init.id;\n        this.uri = init.uri;\n        this.encrypted = init.encrypted;\n\n        Object.freeze(this);\n    }\n\n    toJSON(): RTCRtpHeaderExtensionInit {\n        return {\n            id: this.id,\n            uri: this.uri,\n            encrypted: this.encrypted\n        };\n    }\n}\n"]}