{"version":3,"sources":["RTCRtpParameters.ts"],"names":["RTCRtcpParameters","RTCRtpCodecParameters","RTCRtpHeaderExtension","RTCRtpParameters","constructor","init","codec","codecs","push","ext","headerExtensions","rtcp","toJSON","map","c","he"],"mappings":";;AAAA,OAAOA,iBAAP,MAAyD,qBAAzD;AACA,OAAOC,qBAAP,MAAiE,yBAAjE;AACA,OAAOC,qBAAP,MAAiE,yBAAjE;AASA,eAAe,MAAMC,gBAAN,CAAuB;AAKlCC,EAAAA,WAAW,CAACC,IAAD,EAA6B;AAAA,oCAJG,EAIH;;AAAA,8CAHa,EAGb;;AAAA;;AACpC,SAAK,MAAMC,KAAX,IAAoBD,IAAI,CAACE,MAAzB,EAAiC;AAC7B,WAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAIP,qBAAJ,CAA0BK,KAA1B,CAAjB;AACH;;AAED,SAAK,MAAMG,GAAX,IAAkBJ,IAAI,CAACK,gBAAvB,EAAyC;AACrC,WAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAAIN,qBAAJ,CAA0BO,GAA1B,CAA3B;AACH;;AAED,SAAKE,IAAL,GAAY,IAAIX,iBAAJ,CAAsBK,IAAI,CAACM,IAA3B,CAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAyB;AAC3B,WAAO;AACHL,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYM,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACF,MAAF,EAArB,CADL;AAEHF,MAAAA,gBAAgB,EAAE,KAAKA,gBAAL,CAAsBG,GAAtB,CAA0BE,EAAE,IAAIA,EAAE,CAACH,MAAH,EAAhC,CAFf;AAGHD,MAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUC,MAAV;AAHH,KAAP;AAKH;;AAvBiC","sourcesContent":["import RTCRtcpParameters, { RTCRtcpParametersInit } from './RTCRtcpParameters';\nimport RTCRtpCodecParameters, { RTCRtpCodecParametersInit } from './RTCRtpCodecParameters';\nimport RTCRtpHeaderExtension, { RTCRtpHeaderExtensionInit } from './RTCRtpHeaderExtension';\n\n\nexport interface RTCRtpParametersInit {\n    codecs: RTCRtpCodecParametersInit[],\n    headerExtensions: RTCRtpHeaderExtensionInit[],\n    rtcp: RTCRtcpParametersInit\n}\n\nexport default class RTCRtpParameters {\n    readonly codecs: RTCRtpCodecParameters[] = [];\n    readonly headerExtensions: RTCRtpHeaderExtension[] = [];\n    readonly rtcp: RTCRtcpParameters;\n\n    constructor(init: RTCRtpParametersInit) {\n        for (const codec of init.codecs) {\n            this.codecs.push(new RTCRtpCodecParameters(codec));\n        }\n\n        for (const ext of init.headerExtensions) {\n            this.headerExtensions.push(new RTCRtpHeaderExtension(ext));\n        }\n\n        this.rtcp = new RTCRtcpParameters(init.rtcp);\n    }\n\n    toJSON(): RTCRtpParametersInit {\n        return {\n            codecs: this.codecs.map(c => c.toJSON()),\n            headerExtensions: this.headerExtensions.map(he => he.toJSON()),\n            rtcp: this.rtcp.toJSON()\n        };\n    }\n}\n"]}