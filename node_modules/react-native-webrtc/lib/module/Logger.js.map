{"version":3,"sources":["Logger.ts"],"names":["debug","Logger","enable","ns","constructor","prefix","_prefix","ROOT_PREFIX","_debug","_info","_warn","_error","log","console","bind","msg","info","warn","error","err","trace","stack"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,MAAN,CAAa;AAQX,SAANC,MAAM,CAACC,EAAD,EAAmB;AAC5BH,IAAAA,KAAK,CAACE,MAAN,CAAaC,EAAb;AACH;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAiB;AAAA;;AAAA;;AAAA;;AAAA;;AACxB,UAAMC,OAAO,GAAI,GAAEL,MAAM,CAACM,WAAY,IAAGF,MAAO,EAAhD;AAEA,SAAKG,MAAL,GAAcR,KAAK,CAAE,GAAEM,OAAQ,QAAZ,CAAnB;AACA,SAAKG,KAAL,GAAaT,KAAK,CAAE,GAAEM,OAAQ,OAAZ,CAAlB;AACA,SAAKI,KAAL,GAAaV,KAAK,CAAE,GAAEM,OAAQ,OAAZ,CAAlB;AACA,SAAKK,MAAL,GAAcX,KAAK,CAAE,GAAEM,OAAQ,QAAZ,CAAnB;AAEA,UAAMM,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAZ;AAEA,SAAKL,MAAL,CAAYI,GAAZ,GAAkBA,GAAlB;AACA,SAAKH,KAAL,CAAWG,GAAX,GAAiBA,GAAjB;AACA,SAAKF,KAAL,CAAWE,GAAX,GAAiBA,GAAjB;AACA,SAAKD,MAAL,CAAYC,GAAZ,GAAkBA,GAAlB;AACH;;AAEDZ,EAAAA,KAAK,CAACe,GAAD,EAAoB;AACrB,SAAKP,MAAL,CAAYO,GAAZ;AACH;;AAEDC,EAAAA,IAAI,CAACD,GAAD,EAAoB;AACpB,SAAKN,KAAL,CAAWM,GAAX;AACH;;AAEDE,EAAAA,IAAI,CAACF,GAAD,EAAoB;AACpB,SAAKL,KAAL,CAAWK,GAAX;AACH;;AAEDG,EAAAA,KAAK,CAACH,GAAD,EAAcI,GAAd,EAAiC;AAAA;;AAClC,UAAMC,KAAK,iBAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,KAAR,mDAAiB,KAA5B;;AAEA,SAAKV,MAAL,CAAa,GAAEI,GAAI,WAAUK,KAAM,EAAnC;AACH;;AA5CuB;;gBAAPnB,M,iBACI,W","sourcesContent":["import debug from 'debug';\n\n\nexport default class Logger {\n    static ROOT_PREFIX = 'rn-webrtc';\n\n    private _debug: debug.Debugger;\n    private _info: debug.Debugger;\n    private _warn: debug.Debugger;\n    private _error: debug.Debugger;\n\n    static enable(ns: string): void {\n        debug.enable(ns);\n    }\n\n    constructor(prefix: string) {\n        const _prefix = `${Logger.ROOT_PREFIX}:${prefix}`;\n\n        this._debug = debug(`${_prefix}:DEBUG`);\n        this._info = debug(`${_prefix}:INFO`);\n        this._warn = debug(`${_prefix}:WARN`);\n        this._error = debug(`${_prefix}:ERROR`);\n\n        const log = console.log.bind(console);\n\n        this._debug.log = log;\n        this._info.log = log;\n        this._warn.log = log;\n        this._error.log = log;\n    }\n\n    debug(msg: string): void {\n        this._debug(msg);\n    }\n\n    info(msg: string): void {\n        this._info(msg);\n    }\n\n    warn(msg: string): void {\n        this._warn(msg);\n    }\n\n    error(msg: string, err?: Error): void {\n        const trace = err?.stack ?? 'N/A';\n\n        this._error(`${msg} Trace: ${trace}`);\n    }\n}\n"]}